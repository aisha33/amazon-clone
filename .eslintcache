[{"C:\\Users\\aisha\\amazon-clone\\src\\index.js":"1","C:\\Users\\aisha\\amazon-clone\\src\\StateProvider.js":"2","C:\\Users\\aisha\\amazon-clone\\src\\App.js":"3","C:\\Users\\aisha\\amazon-clone\\src\\serviceWorker.js":"4","C:\\Users\\aisha\\amazon-clone\\src\\reducer.js":"5","C:\\Users\\aisha\\amazon-clone\\src\\Login.js":"6","C:\\Users\\aisha\\amazon-clone\\src\\Checkout.js":"7","C:\\Users\\aisha\\amazon-clone\\src\\Header.js":"8","C:\\Users\\aisha\\amazon-clone\\src\\Home.js":"9","C:\\Users\\aisha\\amazon-clone\\src\\Payment.js":"10","C:\\Users\\aisha\\amazon-clone\\src\\firebase.js":"11","C:\\Users\\aisha\\amazon-clone\\src\\Subtotal.js":"12","C:\\Users\\aisha\\amazon-clone\\src\\CheckoutProduct.js":"13","C:\\Users\\aisha\\amazon-clone\\src\\axios.js":"14","C:\\Users\\aisha\\amazon-clone\\src\\Product.js":"15","C:\\Users\\aisha\\amazon-clone\\src\\Orders.js":"16","C:\\Users\\aisha\\amazon-clone\\src\\Order.js":"17"},{"size":692,"mtime":1606361303800,"results":"18","hashOfConfig":"19"},{"size":495,"mtime":1605702507080,"results":"20","hashOfConfig":"19"},{"size":1813,"mtime":1607884347434,"results":"21","hashOfConfig":"19"},{"size":6049,"mtime":1605556153234,"results":"22","hashOfConfig":"19"},{"size":1336,"mtime":1607273577689,"results":"23","hashOfConfig":"19"},{"size":2024,"mtime":1606784206795,"results":"24","hashOfConfig":"19"},{"size":1219,"mtime":1606344896771,"results":"25","hashOfConfig":"19"},{"size":2012,"mtime":1607283968504,"results":"26","hashOfConfig":"19"},{"size":3287,"mtime":1607969142963,"results":"27","hashOfConfig":"19"},{"size":5990,"mtime":1607271551162,"results":"28","hashOfConfig":"19"},{"size":591,"mtime":1607874656009,"results":"29","hashOfConfig":"19"},{"size":1208,"mtime":1606932054173,"results":"30","hashOfConfig":"19"},{"size":1318,"mtime":1607284668966,"results":"31","hashOfConfig":"19"},{"size":192,"mtime":1607892960716,"results":"32","hashOfConfig":"19"},{"size":1092,"mtime":1606929876183,"results":"33","hashOfConfig":"19"},{"size":1142,"mtime":1607281669526,"results":"34","hashOfConfig":"19"},{"size":1241,"mtime":1607282256558,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"40f6hs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aisha\\amazon-clone\\src\\index.js",[],["78","79"],"C:\\Users\\aisha\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\App.js",["80","81"],"import React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport Payment from \"./Payment\";\nimport Orders from \"./Orders\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\n\n\n\nconst promise = loadStripe(\n  \"pk_test_51HuNBvKKSvXLxhfGvKHzgHGUwchqiJYpLSFzp68x0HuUCEkvG1ZfVPsx2uIbz5iIUL9UUQxX15msR28enUqPLgih00d2W7DZzu\"\n);\n\n\nfunction App() {\n  const [{ }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app component loads...\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // the user just logged in / the user was logged in\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        // the user is logged out\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","C:\\Users\\aisha\\amazon-clone\\src\\serviceWorker.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\reducer.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Login.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Checkout.js",["82"],"import React from 'react';\r\nimport './Checkout.css';\r\nimport Subtotal from './Subtotal';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\n\r\nfunction Checkout() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout-left\">\r\n                <img className=\"checkout-ad\" src=\"https://www.zingoy.com/blog/wp-content/uploads/2020/08/Ajio-Banner-Desktop__7__zxg132.jpg\" alt=\"\" />\r\n                <div>\r\n                    <h3> Hello, {user?.email}</h3>\r\n                    <h2 className=\"checkout_title\"> Shopping Basket</h2>\r\n                    {basket.map(item => (\r\n                        <CheckoutProduct\r\n                            id={item.id} title={item.title}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                            image={item.image}\r\n                        />\r\n\r\n                    ))}\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout-right\">\r\n                <Subtotal />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Checkout;","C:\\Users\\aisha\\amazon-clone\\src\\Header.js",["83"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\n\r\n\r\n\r\nfunction Header() {\r\n  const handleAuthentication = () => {\r\n    if (user) {\r\n      auth.signOut()\r\n    }\r\n\r\n  }\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">\r\n        <img\r\n          className=\"header_logo\"\r\n          src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt=\"\"\r\n        />\r\n      </Link>\r\n\r\n\r\n\r\n      <div className=\"header_search\">\r\n        <input className=\"header_searchInput\" type=\"text\" />\r\n        <SearchIcon className=\" header-searchIcon\" />\r\n      </div>\r\n\r\n      <div className=\"header-nav\">\r\n        <Link to={!user && '/login'}>\r\n          <div onClick={handleAuthentication} className=\"header_option\">\r\n            <span className=\"header_optionLineOne\">Hello{!user ? 'Gusit' : user.email}</span>\r\n            <span className=\"header_optionLinetwo\">\r\n              {user ? 'Sign Out' : 'Sign In'}\r\n            </span>\r\n          </div>\r\n\r\n        </Link>\r\n        <Link to='/orders'>\r\n          <div className=\"header_option\">\r\n            <span className=\"header_optionLineOne\">Returns</span>\r\n            <span className=\"header_optionLinetwo\"> & Orders</span>\r\n          </div>\r\n\r\n        </Link>\r\n\r\n        <div className=\"header_option\">\r\n          <span className=\"header_optionLineOne\">Your</span>\r\n          <span className=\"header_optionLinetwo\">Prime</span>\r\n        </div>\r\n        <Link to=\"/checkout\">\r\n          <div className=\"header-optionBasket \">\r\n            <ShoppingBasketIcon />\r\n            <span className=\"header_optionLinetwo header_basketCount\">{basket?.length}</span>\r\n          </div>\r\n        </Link>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\aisha\\amazon-clone\\src\\Home.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Payment.js",["84"],"import React, { useState, useEffect } from 'react';\r\nimport './Payment.css';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    console.log('THE SECRET IS >>>', clientSecret)\r\n    console.log('👱', user)\r\n\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent = payment confirmation\r\n\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    basket: basket,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                })\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                        )\r\n                </h1>\r\n\r\n\r\n                {/* Payment section - delivery address */}\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment_address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Review Items */}\r\n                <div className='payment_section'>\r\n                    <div className='payment_title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment_items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* Payment section - Payment method */}\r\n                <div className='payment_section'>\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        {/* Stripe magic will go */}\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n\r\n                            <div className='payment_priceContainer'>\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <h3>Order Total: {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Errors */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\aisha\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Subtotal.js",["85"],"import React from 'react';\r\nimport './Subtotal.css';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{ basket }, dipatch] = useStateValue();\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>\r\n                            suptotal({basket.length} items):<strong> {value} </strong>\r\n                        </p>\r\n\r\n                        <small className=\"subtotal_gift\">\r\n\r\n                            <input type=\"checkbox\" /> This order contains as gift\r\n                </small>\r\n                    </>\r\n\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"} thousandSeprator={true}\r\n                prefix={\"$\"}\r\n\r\n            />\r\n            <button onClick={e => history.push('/Payment')}>Proceed to Checkout</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Subtotal;","C:\\Users\\aisha\\amazon-clone\\src\\CheckoutProduct.js",["86","87"],"import React from 'react';\r\nimport './CheckoutProduct.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    const removeFromBasket = () => {\r\n        // remove the item from the basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id: id,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='checkoutProduct'>\r\n            <img className='checkoutProduct__image' src={image} />\r\n\r\n            <div className='checkoutProduct__info'>\r\n                <p className='checkoutProduct__title'>{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {Array(rating)\r\n                        .fill()\r\n                        .map((_, i) => (\r\n                            <p>☆</p>\r\n                        ))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromBasket}>Remove from Basket</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct","C:\\Users\\aisha\\amazon-clone\\src\\axios.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Product.js",[],"C:\\Users\\aisha\\amazon-clone\\src\\Orders.js",["88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { db } from \"./firebase\";\r\nimport './Orders.css'\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Order from './Order'\r\n\r\nfunction Orders() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            db\r\n                .collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .orderBy('created', 'desc')\r\n                .onSnapshot(snapshot => (\r\n                    setOrders(snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data()\r\n                    })))\r\n                ))\r\n        } else {\r\n            setOrders([])\r\n        }\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <div className='orders'>\r\n            <h1>Your Orders</h1>\r\n\r\n            <div className='orders_order'>\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders","C:\\Users\\aisha\\amazon-clone\\src\\Order.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":23,"column":10,"nodeType":"96","messageId":"97","endLine":23,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":42,"column":6,"nodeType":"100","endLine":42,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":10,"column":30,"nodeType":"104","messageId":"105","endLine":10,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":18,"column":28,"nodeType":"104","messageId":"105","endLine":18,"endColumn":36},{"ruleId":"102","severity":1,"message":"106","line":47,"column":15,"nodeType":"104","messageId":"105","endLine":47,"endColumn":22},{"ruleId":"102","severity":1,"message":"107","line":11,"column":24,"nodeType":"104","messageId":"105","endLine":11,"endColumn":31},{"ruleId":"102","severity":1,"message":"108","line":6,"column":14,"nodeType":"104","messageId":"105","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":18,"column":13,"nodeType":"111","endLine":18,"endColumn":67},{"ruleId":"102","severity":1,"message":"108","line":8,"column":14,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":8,"column":30,"nodeType":"104","messageId":"105","endLine":8,"endColumn":38},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'payload' is assigned a value but never used.","'dipatch' is assigned a value but never used.","'basket' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [dispatch]",{"range":"117","text":"118"},[1137,1139],"[dispatch]"]